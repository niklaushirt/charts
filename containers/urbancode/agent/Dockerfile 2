# (C) Copyright IBM Corporation 2016.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


FROM ibmjava:8-sfj-alpine

MAINTAINER Niklaus Hirt <niklaushirt@gmail.com>

ENV AGENT_NAME="agent"
ENV SERVER_ADDR="localhost"
ENV SERVER_PORT_JMS="7918"
ENV SERVER_PORT_HTTP="7919"
# Note: Latest version of kubectl may be found at:
# https://aur.archlinux.org/packages/kubectl-bin/
ENV KUBE_LATEST_VERSION="v1.10.2"
# Note: Latest version of helm may be found at:
# https://github.com/kubernetes/helm/releases
ENV HELM_VERSION="v2.9.1"
ENV HOME=/config

RUN apk add --no-cache ca-certificates bash git \
    && wget -q https://storage.googleapis.com/kubernetes-release/release/${KUBE_LATEST_VERSION}/bin/linux/amd64/kubectl -O /usr/local/bin/kubectl \
    && chmod +x /usr/local/bin/kubectl \
    && wget -q http://storage.googleapis.com/kubernetes-helm/helm-${HELM_VERSION}-linux-amd64.tar.gz -O - | tar -xzO linux-amd64/helm > /usr/local/bin/helm \
    && chmod +x /usr/local/bin/helm


WORKDIR /config

RUN set -x && \
    # Create non-root user (with a randomly chosen UID/GUI).
    adduser kubectl -Du 2342 -h /config && \
    # Basic check it works.
    kubectl version --client


ADD ./common/wrapdocker /usr/local/bin/wrapdocker

# Install Docker and dependencies
RUN apk --update add \
  bash \
  iptables \
  ca-certificates \
  e2fsprogs \
  docker \
  && chmod +x /usr/local/bin/wrapdocker \
  && rm -rf /var/cache/apk/*

# Define additional metadata for our image.
VOLUME /var/lib/docker



# RUN echo "http://dl-6.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories
# RUN apk update
# RUN apk add docker
#
# RUN rc-update add docker boot
# RUN service docker start
# RUN docker ps


# RUN apt  --yes --force-yes install apt-transport-https ca-certificates curl software-properties-common python-minimal
# RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
# RUN add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
# RUN apt-get --yes --force-yes update
# RUN apt-get install --yes docker-ce=17.09.0~ce-0~ubuntu

#Copy the files to tmp folder
COPY ./common /tmp/

# install the UCD Agent and remove the install files.
RUN unzip -q /tmp/ucd-agent.zip -d /tmp
RUN   cat /tmp/agent.install.properties >> /tmp/ucd-agent-install/agent.install.properties
RUN 	sh /tmp/ucd-agent-install/install-agent-from-file.sh agent.install.properties
RUN 	rm -rf /tmp/ucd-agent-install
RUN 	rm -f /tmp/agent.install.properties


# JMS
EXPOSE 7918
#HTTP
EXPOSE 7919


# Set work directory for/and command
WORKDIR /tmp
CMD ["sh", "startAgent.sh"]
